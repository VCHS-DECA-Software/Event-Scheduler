//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var StudentGroup = newStudentGroupTable("", "student_group", "")

type studentGroupTable struct {
	sqlite.Table

	// Columns
	ID      sqlite.ColumnInteger
	EventID sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type StudentGroupTable struct {
	studentGroupTable

	EXCLUDED studentGroupTable
}

// AS creates new StudentGroupTable with assigned alias
func (a StudentGroupTable) AS(alias string) *StudentGroupTable {
	return newStudentGroupTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StudentGroupTable with assigned schema name
func (a StudentGroupTable) FromSchema(schemaName string) *StudentGroupTable {
	return newStudentGroupTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new StudentGroupTable with assigned table prefix
func (a StudentGroupTable) WithPrefix(prefix string) *StudentGroupTable {
	return newStudentGroupTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new StudentGroupTable with assigned table suffix
func (a StudentGroupTable) WithSuffix(suffix string) *StudentGroupTable {
	return newStudentGroupTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newStudentGroupTable(schemaName, tableName, alias string) *StudentGroupTable {
	return &StudentGroupTable{
		studentGroupTable: newStudentGroupTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newStudentGroupTableImpl("", "excluded", ""),
	}
}

func newStudentGroupTableImpl(schemaName, tableName, alias string) studentGroupTable {
	var (
		IDColumn       = sqlite.IntegerColumn("id")
		EventIDColumn  = sqlite.StringColumn("event_id")
		allColumns     = sqlite.ColumnList{IDColumn, EventIDColumn}
		mutableColumns = sqlite.ColumnList{EventIDColumn}
	)

	return studentGroupTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		EventID: EventIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
